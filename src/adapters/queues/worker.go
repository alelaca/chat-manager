package queues

import (
	"encoding/json"

	"github.com/alelaca/chat-manager/src/adapters/websocket"
	"github.com/alelaca/chat-manager/src/entities/dtos"
	"github.com/alelaca/chat-manager/src/queues"
	"github.com/alelaca/chat-manager/src/usecases/post"
)

type Worker struct {
	QueuesHandler    queues.QueuesHandler
	PostHandler      post.Usecases
	WebsocketHandler *websocket.Handler
}

func InitializeWorker(queuesHandler queues.QueuesHandler, postHandler post.Usecases, websocketHandler *websocket.Handler) *Worker {
	return &Worker{
		QueuesHandler:    queuesHandler,
		PostHandler:      postHandler,
		WebsocketHandler: websocketHandler,
	}
}

// Handle messages generated by bots or any other entity
func (w *Worker) StartPollingPostsMessages() {
	for {
		w.QueuesHandler.PollPostsMessages(w.commandResultHandler)
	}
}

// Handler to create posts from queues
func (w *Worker) commandResultHandler(msg queues.QueueMessage) error {
	postDTO := dtos.PostDTO{}
	if err := json.Unmarshal(msg.Message, &postDTO); err != nil {
		return err
	}

	post, err := w.PostHandler.CreatePost(postDTO)
	if err != nil {
		return err
	}

	w.WebsocketHandler.Broadcast(*post)

	return nil
}
